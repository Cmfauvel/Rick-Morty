{"version":3,"sources":["scriptP0.js"],"names":["urls","i","length","url","Promise","all","map","fetch","then","resp","r","json","data","j","tab","results","concat","select","document","querySelector","mainContainer","splitSeason","episode","split","addNewCard","ep","querySelectorAll","addEventListener","e","objetEpisodeClicked","filter","x","id","chara","innerHTML","classList","toggle","characters","character","respJson","console","log","image","name","season","target","value","add","episodes"],"mappings":"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","file":"scriptP0.34ced73a.js","sourceRoot":"..","sourcesContent":["\r\n/*\r\nfetch(\"https://rickandmortyapi.com/api/episode\")\r\n    .then(function (res) {\r\n        return res.json();\r\n    })\r\n    .then(function (data) {        \r\n        console.log(data);\r\n        */\r\n\r\n        /*\r\n        let select = document.querySelector(\"#season\");\r\n        let tabResult = data.results;\r\n        const mainContainer = document.querySelector(\".main\");\r\n            //console.log(select);\r\n            select.addEventListener(\"change\", (e) =>{\r\n                let season = e.target.value;\r\n                console.log(season);\r\n                console.log(tabResult);\r\n                mainContainer.innerHTML = \"\";\r\n                for (let i = 0; i < tabResult.length; i++) {\r\n                    //console.log(tabResult[i].episode);\r\n                    let splitSeason = tabResult[i].episode.split(\"\");\r\n                    console.log(splitSeason[2]);\r\n                    if (season == \"s1\" && splitSeason[2] == 1) {\r\n                        addNewCard(tabResult[i]);\r\n                    }\r\n                    else if (season == \"s2\" && splitSeason[2] == 2) {\r\n                        addNewCard(tabResult[i]);\r\n                    }\r\n                }\r\n                    //console.log(splitSeason);\r\n\r\n            })\r\n\r\n            */\r\n     /*})\r\n    \r\n    .catch(function (error) {\r\n        console.error(error);\r\n    })  */\r\n\r\n/*\r\nfetch(\"https://rickandmortyapi.com/api/episode?page=2\")\r\n    .then(function (resp) {\r\n        return resp.json();\r\n    })\r\n    .then(function(data2){\r\n        console.log(data2);\r\n    })\r\n    */\r\n\r\n    /*\r\nlet tabFetch = [fetch(\"https://rickandmortyapi.com/api/episode\"), fetch(\"https://rickandmortyapi.com/api/episode?page=2\"), fetch(\"https://rickandmortyapi.com/api/episode?page=3\")]\r\nfor (let j = 0; j < tabFetch.length; j++) {\r\n    tabFetch[j].then(function (res) {\r\n        return res.json();\r\n    })\r\n    .then(function (data) {        \r\n        let tabData = [data.results];\r\n        //console.log(tabData[0]);\r\n        for (let i = 0; i < tabData.length; i++) {\r\n            //console.log(tabData[0]);\r\n            for (let j = 0; j < tabData[i].length; j++) {\r\n                //console.log(tabData[i][j]);\r\n                let select = document.querySelector(\"#season\");\r\n                const mainContainer = document.querySelector(\".main\");\r\n                let allDataResults = (tabData[i])[j];\r\n                //console.log(allDataResults.episode);\r\n                select.addEventListener(\"change\", (e) =>{\r\n                    let season = e.target.value;\r\n                    let splitSeason = allDataResults.episode.split(\"\");\r\n                    //console.log(splitSeason[2]);\r\n                    //mainContainer.innerHTML = \"\";\r\n                    //console.log(splitSeason);\r\n                    if (season == \"s1\" && splitSeason[2] == 1) {\r\n                        //console.log(allDataResults);\r\n                        addNewCard(allDataResults);\r\n                    } else if (season == \"s2\" && splitSeason[2] == 2) {\r\n                        addNewCard(allDataResults);\r\n                    } else if (season == \"s3\" && splitSeason[2] == 3) {\r\n                        addNewCard(allDataResults);\r\n                    } else if (season == \"s4\" && splitSeason[2] == 4) {\r\n                        addNewCard(allDataResults);\r\n                    } \r\n                })\r\n            }\r\n        }\r\n        \r\n     })\r\n    .catch(function (error) {\r\n        console.error(error);\r\n    })\r\n    \r\n}\r\n*/\r\nlet urls = [\"https://rickandmortyapi.com/api/episode\", \"https://rickandmortyapi.com/api/episode?page=2\", \"https://rickandmortyapi.com/api/episode?page=3\"];\r\nfor (let i = 0; i < urls.length; i++) {\r\n    const url = urls[i];\r\n}\r\nPromise.all(urls.map(url => fetch(url)))\r\n    .then(resp => Promise.all( resp.map(r => r.json())))\r\n    .then(function (data){\r\n        //console.log(data);\r\n        for (let j = 0; j < data.length; j++) {\r\n            //console.log(data[j].results);\r\n        }\r\n        let tab = data[0].results.concat(data[1].results, data[2].results);\r\n        //console.log(tab);\r\n        let select = document.querySelector(\"#season\");\r\n        const mainContainer = document.querySelector(\".main\");\r\n        \r\n            //console.log(select);\r\n            for (let i = 0; i < tab.length; i++) {\r\n                //console.log(tabResult[i].episode);\r\n                let splitSeason = tab[i].episode.split(\"\");\r\n                //console.log(splitSeason[2]);\r\n                if (splitSeason[2] == 1) {\r\n                    addNewCard(tab[i]);\r\n                }\r\n            }\r\n            let ep = document.querySelectorAll(\".card--name\");\r\n                \r\n                for (let i = 0; i < ep.length; i++) { \r\n                  ep[i].addEventListener('click', (e)=> {\r\n                    //console.log(tab.filter(x => x.id == ep[i].id));\r\n                    let objetEpisodeClicked = tab.filter(x => x.id == ep[i].id)[0];\r\n                    let chara = document.querySelector(\".characters\");\r\n                    const mainContainer = document.querySelector(\".main\");\r\n                    //mainContainer.classList.toggle(\"slide-right\");\r\n                    chara.innerHTML = \"\";\r\n                    chara.classList.toggle(\"popup\");\r\n                    for (const character of objetEpisodeClicked.characters) {\r\n                        fetch(character).then((resp)=> {\r\n                            return resp.json()\r\n                        }).then((respJson) => {\r\n                            console.log(respJson);\r\n                            chara.innerHTML += `<li class=\"description\"><img src=\"${respJson.image}\"/>${respJson.name}</li>`\r\n                      })\r\n                    }\r\n                  })\r\n                }\r\n            select.addEventListener(\"change\", (e) =>{\r\n                let season = e.target.value;\r\n                //console.log(season);\r\n                let chara = document.querySelector(\".characters\");\r\n                    chara.innerHTML = \"\";\r\n                    chara.classList.add(\"popup\");\r\n                    chara.classList.toggle(\"popup\");\r\n                mainContainer.innerHTML = \"\";\r\n                for (let i = 0; i < tab.length; i++) {\r\n                    //console.log(tabResult[i].episode);\r\n                    let splitSeason = tab[i].episode.split(\"\");\r\n                    //console.log(splitSeason[2]);\r\n                    if (season == \"s1\" && splitSeason[2] == 1) {\r\n                        addNewCard(tab[i]);\r\n                    }\r\n                    else if (season == \"s2\" && splitSeason[2] == 2) {\r\n                        addNewCard(tab[i]);\r\n                    }\r\n                    else if (season == \"s3\" && splitSeason[2] == 3) {\r\n                        addNewCard(tab[i]);\r\n                    } else if (season == \"s4\" && splitSeason[2] == 4) {\r\n                        addNewCard(tab[i]);\r\n                    }\r\n                }\r\n\r\n                let ep = document.querySelectorAll(\".card--name\");\r\n                \r\n                for (let i = 0; i < ep.length; i++) { \r\n                  ep[i].addEventListener('click', (e)=> {\r\n                      console.log(tab.filter(x => x.id == ep[i].id));\r\n                      let objetEpisodeClicked = tab.filter(x => x.id == ep[i].id)[0];\r\n                      const mainContainer = document.querySelector(\".main\");\r\n                      mainContainer.classList.toggle(\"slide-right\");\r\n                      let chara = document.querySelector(\".characters\");\r\n                      chara.innerHTML = \"\";\r\n                      chara.classList.toggle(\"popup\");\r\n                      /*chara.classList.remove(\"close\");*/\r\n                      for (const character of objetEpisodeClicked.characters) {\r\n                          fetch(character).then((resp)=> {\r\n                              return resp.json()\r\n                            }).then((respJson) => {\r\n                                //console.log(respJson);\r\n                                chara.innerHTML += `<li class=\"description\"><img src=\"${respJson.image}\"/>${respJson.name}</li>`\r\n                      })\r\n                    }\r\n                  })\r\n                }\r\n                \r\n            })\r\n\r\n    })\r\n/*let chara = document.querySelector(\".characters\");\r\nlet cross = document.getElementById(\"close-popup\");\r\ncross.addEventListener(\"click\", function(event) {\r\n    if (event.target == chara) {\r\n        chara.style.display=\"none\";\r\n    }\r\n})*/\r\n\r\n\r\n\r\nfunction addNewCard(episodes) {\r\n    const mainContainer = document.querySelector(\".main\");\r\n    mainContainer.innerHTML +=\r\n        `<div class=\"card\">\r\n          <span class=\"card--name\" id=\"${episodes.id}\">${episodes.name}</span>\r\n          <button class=\"button\">${episodes.episode}</button>\r\n\r\n        </div>`;\r\n}\r\n/*\r\nlet describ = document.querySelectorAll(\".description\");\r\nfor (let index = 0; index < describ.length; index++) {\r\n    console.log(describ[0]);\r\n    //for (const div of describ) {\r\n      //  div.innerHTML += respJson.name;\r\n    //}\r\n}*/\r\n//describ.innerHTML += respJson.name\r\n/*\r\nfunction getEpisodeDetails(listUri, divEp) {\r\n    let reponse = [];\r\n  \r\n    for (const uri of listUri) {\r\n      fetch(uri).then((resp)=> {\r\n        return resp.json()\r\n      }).then((resp2)=> {\r\n        console.log(resp2.id)\r\n        reponse.push(resp2);\r\n        divEp.innerHTML += `<span> ${resp2.name} </span>`\r\n      })\r\n    }\r\n}\r\n*/\r\n\r\n/*\r\nfunction cardDescription(episodes) {\r\n    const mainContainer = document.querySelector(\".main\");\r\n    mainContainer.innerHTML +=\r\n    `<div class=\"card--description\">\r\n    <div claas=\"card--perso\">\r\n    <img src=\"${episodes.characters}\" alt=\"characters from rick and morty\">\r\n    </div>\r\n    </div>`   \r\n}\r\n*/\r\n"]}